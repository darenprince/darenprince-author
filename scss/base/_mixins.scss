@use "variables" as *;
@use "../tokens/colors" as *;

@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}

@mixin button-base($bg, $text: var(--color-white), $hover: null) {
  background: linear-gradient(
    to bottom,
    color-mix(in srgb, #{$bg} 92%, white),
    color-mix(in srgb, #{$bg} 90%, black)
  );
  color: $text;
  padding: $spacing-xs $spacing-md;
  border: none;
  border-radius: $border-radius;
  cursor: pointer;
  display: inline-block;
  text-decoration: none;
  transition: $transition;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);

  &:hover,
  &:focus {
    @if $hover != null {
      background: linear-gradient(
        to bottom,
        color-mix(in srgb, #{$hover} 92%, white),
        color-mix(in srgb, #{$hover} 90%, black)
      );
    } @else {
      background: linear-gradient(
        to bottom,
        color-mix(in srgb, #{$bg} 92%, white),
        color-mix(in srgb, #{$bg} 90%, black)
      );
    }
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
